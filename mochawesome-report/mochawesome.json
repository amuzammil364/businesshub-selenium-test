{
  "stats": {
    "suites": 1,
    "tests": 10,
    "passes": 8,
    "pending": 0,
    "failures": 2,
    "start": "2022-09-27T07:41:08.924Z",
    "end": "2022-09-27T07:41:56.726Z",
    "duration": 47802,
    "testsRegistered": 10,
    "passPercent": 80,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "548347f8-a7d6-4b2a-823c-1610faff8815",
      "title": "",
      "fullFile": "D:\\Work\\businesshub-selenium-test\\test\\register\\registert.js",
      "file": "\\test\\register\\registert.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "91bbed15-8af2-4e2d-9035-0dd54175fd33",
          "title": "Registration Process",
          "fullFile": "D:\\Work\\businesshub-selenium-test\\test\\register\\registert.js",
          "file": "\\test\\register\\registert.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Name Validation Success",
              "fullTitle": "Registration Process Name Validation Success",
              "timedOut": null,
              "duration": 4542,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let value = '';\n    let error = ' The name field is required. ';\n    let xpath = '//*[@id=\"step_input\"]/div[1]/div/span'\n    //perform actions \n    //=============== \n    // --opening chrome\n    let driver = await new webdriver.Builder().forBrowser('chrome').build();\n    // --reaching the Destination\n    await driver.get(_path);\n    // --filling checkbox checked\n    await driver.findElement(webdriver.By.id('term_all_agree')).click();\n    \n    // --click on next step\n    await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n    \n    // --filling fields\n    await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n    // --form submission\n    await driver.findElement(webdriver.By.id('s-next')).click();\n        \n    // --cheking element text to verify if user logged in or not (ASSERTION)\n    let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n        return value;\n    });\n    // (ASSERTION)\n    cerror.should.equal(error);\n        \n    //close the browser \n    // ================ \n    await driver.quit();",
              "err": {},
              "uuid": "07c46802-859e-4d71-8656-82c7d3e2f233",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Email Validation Success",
              "fullTitle": "Registration Process Email Validation Success",
              "timedOut": null,
              "duration": 4185,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let value = '';\n    let error = ' The email field is required. ';\n    let xpath = '//*[@id=\"label_user_email\"]/span'\n    //perform actions \n    //=============== \n    // --opening chrome\n    let driver = await new webdriver.Builder().forBrowser('chrome').build();\n    // --reaching the Destination\n    await driver.get(_path);\n    // --filling checkbox checked\n    await driver.findElement(webdriver.By.id('term_all_agree')).click();\n    \n    // --click on next step\n    await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n    \n    // --filling fields\n    await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n    // --form submission\n    await driver.findElement(webdriver.By.id('s-next')).click();\n        \n    // --cheking element text to verify if user logged in or not (ASSERTION)\n    let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n        return value;\n    });\n    // (ASSERTION)\n    cerror.should.equal(error);\n        \n    //close the browser \n    // ================ \n    await driver.quit();",
              "err": {},
              "uuid": "fad6d4a1-e326-4585-bec1-d19fba2e4938",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Username Validation Success",
              "fullTitle": "Registration Process Username Validation Success",
              "timedOut": null,
              "duration": 4332,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let value = '';\n    let error = ' The username field is required. ';\n    let xpath = '//*[@id=\"step_input\"]/div[3]/div/span'\n    //perform actions \n    //=============== \n    // --opening chrome\n    let driver = await new webdriver.Builder().forBrowser('chrome').build();\n    // --reaching the Destination\n    await driver.get(_path);\n    // --filling checkbox checked\n    await driver.findElement(webdriver.By.id('term_all_agree')).click();\n    \n    // --click on next step\n    await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n    \n    // --filling fields\n    await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n    // --form submission\n    await driver.findElement(webdriver.By.id('s-next')).click();\n        \n    // --cheking element text to verify if user logged in or not (ASSERTION)\n    let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n        return value;\n    });\n    // (ASSERTION)\n    cerror.should.equal(error);\n        \n    //close the browser \n    // ================ \n    await driver.quit();",
              "err": {},
              "uuid": "186cd5b4-415b-4173-b8f5-252a037a101d",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Password Validation Success",
              "fullTitle": "Registration Process Password Validation Success",
              "timedOut": null,
              "duration": 4156,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let value = '';\n        let error = ' The password field is required. ';\n        let xpath = '//*[@id=\"step_input\"]/div[4]/div/span'\n        //perform actions \n        //=============== \n        // --opening chrome\n        let driver = await new webdriver.Builder().forBrowser('chrome').build();\n        // --reaching the Destination\n        await driver.get(_path);\n        // --filling checkbox checked\n        await driver.findElement(webdriver.By.id('term_all_agree')).click();\n        \n        // --click on next step\n        await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n        \n        // --filling fields\n        await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n        // --form submission\n        await driver.findElement(webdriver.By.id('s-next')).click();\n            \n        // --cheking element text to verify if user logged in or not (ASSERTION)\n        let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n            return value;\n        });\n        // (ASSERTION)\n        cerror.should.equal(error);\n            \n        //close the browser \n        // ================ \n        await driver.quit();",
              "err": {},
              "uuid": "80829e6d-49eb-47a8-9fe3-070671406327",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Registry Number Validation Success",
              "fullTitle": "Registration Process Registry Number Validation Success",
              "timedOut": null,
              "duration": 4090,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let value = '';\n        let error = ' The registry number field is required. ';\n        let xpath = '//*[@id=\"step_input\"]/div[6]/div/span'\n        //perform actions \n        //=============== \n        // --opening chrome\n        let driver = await new webdriver.Builder().forBrowser('chrome').build();\n        // --reaching the Destination\n        await driver.get(_path);\n        // --filling checkbox checked\n        await driver.findElement(webdriver.By.id('term_all_agree')).click();\n        \n        // --click on next step\n        await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n        \n        // --filling fields\n        await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n        // --form submission\n        await driver.findElement(webdriver.By.id('s-next')).click();\n            \n        // --cheking element text to verify if user logged in or not (ASSERTION)\n        let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n            return value;\n        });\n        // (ASSERTION)\n        cerror.should.equal(error);\n            \n        //close the browser \n        // ================ \n        await driver.quit();",
              "err": {},
              "uuid": "f65831f7-7fdc-454d-8a5f-2fa7dfa3ce11",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Post code Validation Success",
              "fullTitle": "Registration Process Post code Validation Success",
              "timedOut": null,
              "duration": 3790,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let value = '';\n        let error = ' The registry number field is required. ';\n        let xpath = '//*[@id=\"step_input\"]/div[8]/div/span'\n        //perform actions \n        //=============== \n        // --opening chrome\n        let driver = await new webdriver.Builder().forBrowser('chrome').build();\n        // --reaching the Destination\n        await driver.get(_path);\n        // --filling checkbox checked\n        await driver.findElement(webdriver.By.id('term_all_agree')).click();\n        \n        // --click on next step\n        await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n        \n        // --filling fields\n        await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n        // --form submission\n        await driver.findElement(webdriver.By.id('s-next')).click();\n            \n        // --cheking element text to verify if user logged in or not (ASSERTION)\n        let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n            return value;\n        });\n        // (ASSERTION)\n        cerror.should.equal(error);\n            \n        //close the browser \n        // ================ \n        await driver.quit();",
              "err": {
                "message": "AssertionError: expected ' The post code field is required. ' to equal ' The registry number field is require…'",
                "estack": "AssertionError: expected ' The post code field is required. ' to equal ' The registry number field is require…'\n    at Context.<anonymous> (test\\register\\registert.js:253:23)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "-  The post code field is required. \n+  The registry number field is required. \n"
              },
              "uuid": "a3c62855-3c0a-4cc9-927c-6245c45ee17c",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Address Validation Success",
              "fullTitle": "Registration Process Address Validation Success",
              "timedOut": null,
              "duration": 4346,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "let value = '';\n        let error = ' The registry number field is required. ';\n        let xpath = '//*[@id=\"step_input\"]/div[9]/div/span'\n        //perform actions \n        //=============== \n        // --opening chrome\n        let driver = await new webdriver.Builder().forBrowser('chrome').build();\n        // --reaching the Destination\n        await driver.get(_path);\n        // --filling checkbox checked\n        await driver.findElement(webdriver.By.id('term_all_agree')).click();\n        \n        // --click on next step\n        await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n        \n        // --filling fields\n        await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n        // --form submission\n        await driver.findElement(webdriver.By.id('s-next')).click();\n            \n        // --cheking element text to verify if user logged in or not (ASSERTION)\n        let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n            return value;\n        });\n        // (ASSERTION)\n        cerror.should.equal(error);\n            \n        //close the browser \n        // ================ \n        await driver.quit();",
              "err": {
                "message": "AssertionError: expected ' The address field is required. ' to equal ' The registry number field is require…'",
                "estack": "AssertionError: expected ' The address field is required. ' to equal ' The registry number field is require…'\n    at Context.<anonymous> (test\\register\\registert.js:294:23)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "-  The address field is required. \n+  The registry number field is required. \n"
              },
              "uuid": "1cf62a9f-6553-45aa-b463-ef0b85c02e27",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "OR ID Validation Success",
              "fullTitle": "Registration Process OR ID Validation Success",
              "timedOut": null,
              "duration": 5649,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let value = '';\n        let error = ' The or id field is required. ';\n        let xpath = '//*[@id=\"step_input\"]/div[11]/div/span'\n        //perform actions \n        //=============== \n        // --opening chrome\n        let driver = await new webdriver.Builder().forBrowser('chrome').build();\n        // --reaching the Destination\n        await driver.get(_path);\n        // --filling checkbox checked\n        await driver.findElement(webdriver.By.id('term_all_agree')).click();\n        \n        // --click on next step\n        await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n        \n        // --filling fields\n        await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n        // --form submission\n        await driver.findElement(webdriver.By.id('s-next')).click();\n            \n        // --cheking element text to verify if user logged in or not (ASSERTION)\n        let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n            return value;\n        });\n        // (ASSERTION)\n        cerror.should.equal(error);\n            \n        //close the browser \n        // ================ \n        await driver.quit();",
              "err": {},
              "uuid": "423dd1ef-11d8-4340-8487-e8d05734e465",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "ID CARD Validation Success",
              "fullTitle": "Registration Process ID CARD Validation Success",
              "timedOut": null,
              "duration": 5864,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let value = '';\n        let error = ' The id card field is required. ';\n        let xpath = '//*[@id=\"label_id_card\"]/span'\n        //perform actions \n        //=============== \n        // --opening chrome\n        let driver = await new webdriver.Builder().forBrowser('chrome').build();\n        // --reaching the Destination\n        await driver.get(_path);\n        // --filling checkbox checked\n        await driver.findElement(webdriver.By.id('term_all_agree')).click();\n        \n        // --click on next step\n        await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n        \n        // --filling fields\n        await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n        // --form submission\n        await driver.findElement(webdriver.By.id('s-next')).click();\n            \n        // --cheking element text to verify if user logged in or not (ASSERTION)\n        let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n            return value;\n        });\n        // (ASSERTION)\n        cerror.should.equal(error);\n            \n        //close the browser \n        // ================ \n        await driver.quit();",
              "err": {},
              "uuid": "05bdd930-74d5-4926-95e8-1dccfcb5174e",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Passport Validation Success",
              "fullTitle": "Registration Process Passport Validation Success",
              "timedOut": null,
              "duration": 6016,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let value = '';\n        let error = ' The passbook field is required. ';\n        let xpath = '//*[@id=\"label_passbook\"]/span'\n        //perform actions \n        //=============== \n        // --opening chrome\n        let driver = await new webdriver.Builder().forBrowser('chrome').build();\n        // --reaching the Destination\n        await driver.get(_path);\n        // --filling checkbox checked\n        await driver.findElement(webdriver.By.id('term_all_agree')).click();\n        \n        // --click on next step\n        await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n        \n        // --filling fields\n        await driver.findElement(webdriver.By.id('name')).sendKeys(value);\n        // --form submission\n        await driver.findElement(webdriver.By.id('s-next')).click();\n            \n        // --cheking element text to verify if user logged in or not (ASSERTION)\n        let cerror = await driver.findElement(webdriver.By.xpath(xpath)).getAttribute('innerHTML').then((value)=>{\n            return value;\n        });\n        // (ASSERTION)\n        cerror.should.equal(error);\n            \n        //close the browser \n        // ================ \n        await driver.quit();",
              "err": {},
              "uuid": "00981b63-9cc5-4122-a048-aaecfdbd8d24",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "07c46802-859e-4d71-8656-82c7d3e2f233",
            "fad6d4a1-e326-4585-bec1-d19fba2e4938",
            "186cd5b4-415b-4173-b8f5-252a037a101d",
            "80829e6d-49eb-47a8-9fe3-070671406327",
            "f65831f7-7fdc-454d-8a5f-2fa7dfa3ce11",
            "423dd1ef-11d8-4340-8487-e8d05734e465",
            "05bdd930-74d5-4926-95e8-1dccfcb5174e",
            "00981b63-9cc5-4122-a048-aaecfdbd8d24"
          ],
          "failures": [
            "a3c62855-3c0a-4cc9-927c-6245c45ee17c",
            "1cf62a9f-6553-45aa-b463-ef0b85c02e27"
          ],
          "pending": [],
          "skipped": [],
          "duration": 46970,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}