{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 0,
    "pending": 0,
    "failures": 1,
    "start": "2022-09-27T04:34:44.364Z",
    "end": "2022-09-27T04:34:55.290Z",
    "duration": 10926,
    "testsRegistered": 1,
    "passPercent": 0,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "5c7c0aff-fe5f-49da-bcbb-efcb4ca2f838",
      "title": "",
      "fullFile": "D:\\Work\\businesshub-selenium-test\\test\\register\\registert.js",
      "file": "\\test\\register\\registert.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "04583dad-5056-4ca7-9020-ec134a82ae65",
          "title": "Registration Process",
          "fullFile": "D:\\Work\\businesshub-selenium-test\\test\\register\\registert.js",
          "file": "\\test\\register\\registert.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Name Validation Success",
              "fullTitle": "Registration Process Name Validation Success",
              "timedOut": null,
              "duration": 6893,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "/**\n         * Variables\n         */\n        let name = '';\n        let error = ' The name field is required. ';\n    \n        /**\n         * perform actions \n         */\n    \n        //opening chrome\n        let driver = await new webdriver.Builder().forBrowser('chrome').build();\n    \n        // --reaching the Destination\n        await driver.get(_path);\n    \n        // --filling checkbox checked\n        await driver.findElement(webdriver.By.id('term_all_agree')).click();\n        \n        // --click on next step\n        await driver.findElement(webdriver.By.id('btn_term_next')).click();        \n        \n        // --filling fields\n        await driver.findElement(webdriver.By.id('name')).sendKeys(name);\n    \n        // --form submission\n        await driver.findElement(webdriver.By.id('s-next')).click();\n        \n        \n        // --cheking element text to verify if user logged in or not (ASSERTION)\n        let cerror = await driver.findElement(webdriver.By.xpath('//*[@id=\"step_input\"]/div[1]/div/span')).getAttribute('innerHTML').then((value)=>{\n            return value;\n        });\n        // (ASSERTION)\n        cerror.should.equal(error);\n    \n    \n        /**\n         * close the browser \n         */\n        await driver.quit();",
              "err": {
                "message": "WebDriverError: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=105.0.5195.127)",
                "estack": "WebDriverError: unknown error: net::ERR_CONNECTION_REFUSED\n  (Session info: chrome=105.0.5195.127)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:522:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:589:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:514:28)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:740:17)\n    at async Context.<anonymous> (test\\register\\registert.js:31:9)",
                "diff": null
              },
              "uuid": "95616705-d582-4758-a082-162b07255e45",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "95616705-d582-4758-a082-162b07255e45"
          ],
          "pending": [],
          "skipped": [],
          "duration": 6893,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.0.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}